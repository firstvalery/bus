/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.bus.postgres.Indexes;
import ru.smartsarov.bus.postgres.Keys;
import ru.smartsarov.bus.postgres.Public;
import ru.smartsarov.bus.postgres.tables.records.ShiftScheduleRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShiftSchedule extends TableImpl<ShiftScheduleRecord> {

    private static final long serialVersionUID = -1980861098;

    /**
     * The reference instance of <code>public.shift_schedule</code>
     */
    public static final ShiftSchedule SHIFT_SCHEDULE = new ShiftSchedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShiftScheduleRecord> getRecordType() {
        return ShiftScheduleRecord.class;
    }

    /**
     * The column <code>public.shift_schedule.id</code>.
     */
    public final TableField<ShiftScheduleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('shift_schedule_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.shift_schedule.name</code>.
     */
    public final TableField<ShiftScheduleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.shift_schedule.shift_type_id</code>.
     */
    public final TableField<ShiftScheduleRecord, Short> SHIFT_TYPE_ID = createField("shift_type_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.shift_schedule.shift_departure_list_id</code>.
     */
    public final TableField<ShiftScheduleRecord, Short> SHIFT_DEPARTURE_LIST_ID = createField("shift_departure_list_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.shift_schedule.from_garage_before_flag</code>.
     */
    public final TableField<ShiftScheduleRecord, Boolean> FROM_GARAGE_BEFORE_FLAG = createField("from_garage_before_flag", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.shift_schedule.to_garage_after_flag</code>.
     */
    public final TableField<ShiftScheduleRecord, Boolean> TO_GARAGE_AFTER_FLAG = createField("to_garage_after_flag", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.shift_schedule.garage_between_flag</code>.
     */
    public final TableField<ShiftScheduleRecord, Boolean> GARAGE_BETWEEN_FLAG = createField("garage_between_flag", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.shift_schedule.removed</code>.
     */
    public final TableField<ShiftScheduleRecord, Short> REMOVED = createField("removed", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>public.shift_schedule</code> table reference
     */
    public ShiftSchedule() {
        this(DSL.name("shift_schedule"), null);
    }

    /**
     * Create an aliased <code>public.shift_schedule</code> table reference
     */
    public ShiftSchedule(String alias) {
        this(DSL.name(alias), SHIFT_SCHEDULE);
    }

    /**
     * Create an aliased <code>public.shift_schedule</code> table reference
     */
    public ShiftSchedule(Name alias) {
        this(alias, SHIFT_SCHEDULE);
    }

    private ShiftSchedule(Name alias, Table<ShiftScheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShiftSchedule(Name alias, Table<ShiftScheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ShiftSchedule(Table<O> child, ForeignKey<O, ShiftScheduleRecord> key) {
        super(child, key, SHIFT_SCHEDULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_SHIFT_SCHEDULE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShiftScheduleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHIFT_SCHEDULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShiftScheduleRecord> getPrimaryKey() {
        return Keys.PK_SHIFT_SCHEDULE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShiftScheduleRecord>> getKeys() {
        return Arrays.<UniqueKey<ShiftScheduleRecord>>asList(Keys.PK_SHIFT_SCHEDULE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ShiftScheduleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ShiftScheduleRecord, ?>>asList(Keys.SHIFT_SCHEDULE__FK_SHIFT_SCHEDULE_TBL_SHIFT_TYPE_ID, Keys.SHIFT_SCHEDULE__FK_SHIFT_SCHEDULE_TBL_SHIFT_DEPARTURE_LIST_ID);
    }

    public RbShiftType rbShiftType() {
        return new RbShiftType(this, Keys.SHIFT_SCHEDULE__FK_SHIFT_SCHEDULE_TBL_SHIFT_TYPE_ID);
    }

    public ShiftDepartureList shiftDepartureList() {
        return new ShiftDepartureList(this, Keys.SHIFT_SCHEDULE__FK_SHIFT_SCHEDULE_TBL_SHIFT_DEPARTURE_LIST_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftSchedule as(String alias) {
        return new ShiftSchedule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftSchedule as(Name alias) {
        return new ShiftSchedule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShiftSchedule rename(String name) {
        return new ShiftSchedule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShiftSchedule rename(Name name) {
        return new ShiftSchedule(name, null);
    }
}
