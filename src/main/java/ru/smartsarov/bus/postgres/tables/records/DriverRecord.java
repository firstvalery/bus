/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.bus.postgres.tables.Driver;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverRecord extends UpdatableRecordImpl<DriverRecord> implements Record10<Integer, Short, Short, Integer, Boolean, Short, Short, Short, Boolean, Short> {

    private static final long serialVersionUID = -1707931211;

    /**
     * Setter for <code>public.driver.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.driver.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.driver.employee_data_id</code>.
     */
    public void setEmployeeDataId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.driver.employee_data_id</code>.
     */
    public Short getEmployeeDataId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.driver.position_id</code>.
     */
    public void setPositionId(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.driver.position_id</code>.
     */
    public Short getPositionId() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.driver.bus_id</code>.
     */
    public void setBusId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.driver.bus_id</code>.
     */
    public Integer getBusId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.driver.brigadier_flag</code>.
     */
    public void setBrigadierFlag(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.driver.brigadier_flag</code>.
     */
    public Boolean getBrigadierFlag() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.driver.group_id</code>.
     */
    public void setGroupId(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.driver.group_id</code>.
     */
    public Short getGroupId() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>public.driver.schedule_type</code>.
     */
    public void setScheduleType(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.driver.schedule_type</code>.
     */
    public Short getScheduleType() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>public.driver.state_id</code>.
     */
    public void setStateId(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.driver.state_id</code>.
     */
    public Short getStateId() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>public.driver.ticket_flag</code>.
     */
    public void setTicketFlag(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.driver.ticket_flag</code>.
     */
    public Boolean getTicketFlag() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.driver.removed</code>.
     */
    public void setRemoved(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.driver.removed</code>.
     */
    public Short getRemoved() {
        return (Short) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Short, Short, Integer, Boolean, Short, Short, Short, Boolean, Short> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Short, Short, Integer, Boolean, Short, Short, Short, Boolean, Short> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Driver.DRIVER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return Driver.DRIVER.EMPLOYEE_DATA_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Driver.DRIVER.POSITION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Driver.DRIVER.BUS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Driver.DRIVER.BRIGADIER_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field6() {
        return Driver.DRIVER.GROUP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field7() {
        return Driver.DRIVER.SCHEDULE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field8() {
        return Driver.DRIVER.STATE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return Driver.DRIVER.TICKET_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field10() {
        return Driver.DRIVER.REMOVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getEmployeeDataId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getPositionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getBusId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getBrigadierFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component6() {
        return getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component7() {
        return getScheduleType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component8() {
        return getStateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getTicketFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component10() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getEmployeeDataId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getPositionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getBusId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getBrigadierFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value6() {
        return getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value7() {
        return getScheduleType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value8() {
        return getStateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getTicketFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value10() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value2(Short value) {
        setEmployeeDataId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value3(Short value) {
        setPositionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value4(Integer value) {
        setBusId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value5(Boolean value) {
        setBrigadierFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value6(Short value) {
        setGroupId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value7(Short value) {
        setScheduleType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value8(Short value) {
        setStateId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value9(Boolean value) {
        setTicketFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord value10(Short value) {
        setRemoved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverRecord values(Integer value1, Short value2, Short value3, Integer value4, Boolean value5, Short value6, Short value7, Short value8, Boolean value9, Short value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DriverRecord
     */
    public DriverRecord() {
        super(Driver.DRIVER);
    }

    /**
     * Create a detached, initialised DriverRecord
     */
    public DriverRecord(Integer id, Short employeeDataId, Short positionId, Integer busId, Boolean brigadierFlag, Short groupId, Short scheduleType, Short stateId, Boolean ticketFlag, Short removed) {
        super(Driver.DRIVER);

        set(0, id);
        set(1, employeeDataId);
        set(2, positionId);
        set(3, busId);
        set(4, brigadierFlag);
        set(5, groupId);
        set(6, scheduleType);
        set(7, stateId);
        set(8, ticketFlag);
        set(9, removed);
    }
}
