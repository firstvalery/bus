/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables.records;


import java.sql.Date;
import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.bus.postgres.tables.DriverScheduleSnapshot;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverScheduleSnapshotRecord extends UpdatableRecordImpl<DriverScheduleSnapshotRecord> implements Record7<Integer, Date, Short, Short, OffsetDateTime, OffsetDateTime, Short> {

    private static final long serialVersionUID = 1779877157;

    /**
     * Setter for <code>public.driver_schedule_snapshot.driver_id</code>.
     */
    public void setDriverId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.driver_schedule_snapshot.driver_id</code>.
     */
    public Integer getDriverId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.driver_schedule_snapshot.date</code>.
     */
    public void setDate(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.driver_schedule_snapshot.date</code>.
     */
    public Date getDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>public.driver_schedule_snapshot.shift_type_id</code>.
     */
    public void setShiftTypeId(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.driver_schedule_snapshot.shift_type_id</code>.
     */
    public Short getShiftTypeId() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.driver_schedule_snapshot.ready_type_id</code>.
     */
    public void setReadyTypeId(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.driver_schedule_snapshot.ready_type_id</code>.
     */
    public Short getReadyTypeId() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.driver_schedule_snapshot.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.driver_schedule_snapshot.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.driver_schedule_snapshot.ended_at</code>.
     */
    public void setEndedAt(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.driver_schedule_snapshot.ended_at</code>.
     */
    public OffsetDateTime getEndedAt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.driver_schedule_snapshot.removed</code>.
     */
    public void setRemoved(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.driver_schedule_snapshot.removed</code>.
     */
    public Short getRemoved() {
        return (Short) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Date, OffsetDateTime> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Date, Short, Short, OffsetDateTime, OffsetDateTime, Short> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Date, Short, Short, OffsetDateTime, OffsetDateTime, Short> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT.DRIVER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT.SHIFT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT.READY_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field5() {
        return DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field6() {
        return DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT.ENDED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field7() {
        return DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT.REMOVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDriverId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getShiftTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getReadyTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component5() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component6() {
        return getEndedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component7() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDriverId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getShiftTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getReadyTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value5() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value6() {
        return getEndedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value7() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord value1(Integer value) {
        setDriverId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord value2(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord value3(Short value) {
        setShiftTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord value4(Short value) {
        setReadyTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord value5(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord value6(OffsetDateTime value) {
        setEndedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord value7(Short value) {
        setRemoved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleSnapshotRecord values(Integer value1, Date value2, Short value3, Short value4, OffsetDateTime value5, OffsetDateTime value6, Short value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DriverScheduleSnapshotRecord
     */
    public DriverScheduleSnapshotRecord() {
        super(DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT);
    }

    /**
     * Create a detached, initialised DriverScheduleSnapshotRecord
     */
    public DriverScheduleSnapshotRecord(Integer driverId, Date date, Short shiftTypeId, Short readyTypeId, OffsetDateTime createdAt, OffsetDateTime endedAt, Short removed) {
        super(DriverScheduleSnapshot.DRIVER_SCHEDULE_SNAPSHOT);

        set(0, driverId);
        set(1, date);
        set(2, shiftTypeId);
        set(3, readyTypeId);
        set(4, createdAt);
        set(5, endedAt);
        set(6, removed);
    }
}
