/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.bus.postgres.Indexes;
import ru.smartsarov.bus.postgres.Keys;
import ru.smartsarov.bus.postgres.Public;
import ru.smartsarov.bus.postgres.tables.records.RouteSnapshotRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RouteSnapshot extends TableImpl<RouteSnapshotRecord> {

    private static final long serialVersionUID = 741248621;

    /**
     * The reference instance of <code>public.route_snapshot</code>
     */
    public static final RouteSnapshot ROUTE_SNAPSHOT = new RouteSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RouteSnapshotRecord> getRecordType() {
        return RouteSnapshotRecord.class;
    }

    /**
     * The column <code>public.route_snapshot.id</code>.
     */
    public final TableField<RouteSnapshotRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.route_snapshot.bus_stop_list_id</code>.
     */
    public final TableField<RouteSnapshotRecord, Short> BUS_STOP_LIST_ID = createField("bus_stop_list_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.route_snapshot.track_id</code>.
     */
    public final TableField<RouteSnapshotRecord, Short> TRACK_ID = createField("track_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.route_snapshot.name</code>.
     */
    public final TableField<RouteSnapshotRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.route_snapshot.day_type</code>.
     */
    public final TableField<RouteSnapshotRecord, Short> DAY_TYPE = createField("day_type", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.route_snapshot.created_at</code>.
     */
    public final TableField<RouteSnapshotRecord, OffsetDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.route_snapshot.ended_at</code>.
     */
    public final TableField<RouteSnapshotRecord, OffsetDateTime> ENDED_AT = createField("ended_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.route_snapshot.0</code>.
     */
    public final TableField<RouteSnapshotRecord, Short> _0 = createField("0", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.route_snapshot</code> table reference
     */
    public RouteSnapshot() {
        this(DSL.name("route_snapshot"), null);
    }

    /**
     * Create an aliased <code>public.route_snapshot</code> table reference
     */
    public RouteSnapshot(String alias) {
        this(DSL.name(alias), ROUTE_SNAPSHOT);
    }

    /**
     * Create an aliased <code>public.route_snapshot</code> table reference
     */
    public RouteSnapshot(Name alias) {
        this(alias, ROUTE_SNAPSHOT);
    }

    private RouteSnapshot(Name alias, Table<RouteSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private RouteSnapshot(Name alias, Table<RouteSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RouteSnapshot(Table<O> child, ForeignKey<O, RouteSnapshotRecord> key) {
        super(child, key, ROUTE_SNAPSHOT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_ROUTE_SNAPSOT_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RouteSnapshotRecord> getPrimaryKey() {
        return Keys.PK_ROUTE_SNAPSOT_TBL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RouteSnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<RouteSnapshotRecord>>asList(Keys.PK_ROUTE_SNAPSOT_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RouteSnapshotRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RouteSnapshotRecord, ?>>asList(Keys.ROUTE_SNAPSHOT__FK_ROUTE_SNAPSHOT_TBL_BUS_STOP_LIST_ID, Keys.ROUTE_SNAPSHOT__FK_ROUTE_SNAPSHOT_TBL_TRACK_ID);
    }

    public BusStopList busStopList() {
        return new BusStopList(this, Keys.ROUTE_SNAPSHOT__FK_ROUTE_SNAPSHOT_TBL_BUS_STOP_LIST_ID);
    }

    public Track track() {
        return new Track(this, Keys.ROUTE_SNAPSHOT__FK_ROUTE_SNAPSHOT_TBL_TRACK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteSnapshot as(String alias) {
        return new RouteSnapshot(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteSnapshot as(Name alias) {
        return new RouteSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RouteSnapshot rename(String name) {
        return new RouteSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RouteSnapshot rename(Name name) {
        return new RouteSnapshot(name, null);
    }
}
