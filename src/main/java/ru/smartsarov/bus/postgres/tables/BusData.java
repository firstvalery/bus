/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.bus.postgres.Indexes;
import ru.smartsarov.bus.postgres.Keys;
import ru.smartsarov.bus.postgres.Public;
import ru.smartsarov.bus.postgres.tables.records.BusDataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusData extends TableImpl<BusDataRecord> {

    private static final long serialVersionUID = 1124598794;

    /**
     * The reference instance of <code>public.bus_data</code>
     */
    public static final BusData BUS_DATA = new BusData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusDataRecord> getRecordType() {
        return BusDataRecord.class;
    }

    /**
     * The column <code>public.bus_data.id</code>.
     */
    public final TableField<BusDataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bus_data_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bus_data.vin</code>.
     */
    public final TableField<BusDataRecord, String> VIN = createField("vin", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.bus_data.year_of_issue</code>.
     */
    public final TableField<BusDataRecord, Short> YEAR_OF_ISSUE = createField("year_of_issue", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_data.make_id</code>.
     */
    public final TableField<BusDataRecord, Short> MAKE_ID = createField("make_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_data.model_id</code>.
     */
    public final TableField<BusDataRecord, Short> MODEL_ID = createField("model_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_data.removed</code>.
     */
    public final TableField<BusDataRecord, Short> REMOVED = createField("removed", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>public.bus_data</code> table reference
     */
    public BusData() {
        this(DSL.name("bus_data"), null);
    }

    /**
     * Create an aliased <code>public.bus_data</code> table reference
     */
    public BusData(String alias) {
        this(DSL.name(alias), BUS_DATA);
    }

    /**
     * Create an aliased <code>public.bus_data</code> table reference
     */
    public BusData(Name alias) {
        this(alias, BUS_DATA);
    }

    private BusData(Name alias, Table<BusDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusData(Name alias, Table<BusDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BusData(Table<O> child, ForeignKey<O, BusDataRecord> key) {
        super(child, key, BUS_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_BUS_DATA_TBL, Indexes.UNIQ_BUS_DATA_TBL_VIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BusDataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUS_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusDataRecord> getPrimaryKey() {
        return Keys.PK_BUS_DATA_TBL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusDataRecord>> getKeys() {
        return Arrays.<UniqueKey<BusDataRecord>>asList(Keys.PK_BUS_DATA_TBL, Keys.UNIQ_BUS_DATA_TBL_VIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BusDataRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BusDataRecord, ?>>asList(Keys.BUS_DATA__FK_BUS_DATA_TBL_BUS_MAKE, Keys.BUS_DATA__FK_BUS_DATA_TBL_BUS_MODEL);
    }

    public RbBusMake rbBusMake() {
        return new RbBusMake(this, Keys.BUS_DATA__FK_BUS_DATA_TBL_BUS_MAKE);
    }

    public RbBusModel rbBusModel() {
        return new RbBusModel(this, Keys.BUS_DATA__FK_BUS_DATA_TBL_BUS_MODEL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusData as(String alias) {
        return new BusData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusData as(Name alias) {
        return new BusData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusData rename(String name) {
        return new BusData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusData rename(Name name) {
        return new BusData(name, null);
    }
}
