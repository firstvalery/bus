/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.bus.postgres.tables.DriverSchedule;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverScheduleRecord extends UpdatableRecordImpl<DriverScheduleRecord> implements Record5<Integer, Date, Short, Short, Short> {

    private static final long serialVersionUID = 427624486;

    /**
     * Setter for <code>public.driver_schedule.driver_id</code>.
     */
    public void setDriverId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.driver_schedule.driver_id</code>.
     */
    public Integer getDriverId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.driver_schedule.date</code>.
     */
    public void setDate(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.driver_schedule.date</code>.
     */
    public Date getDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>public.driver_schedule.shift_type_id</code>.
     */
    public void setShiftTypeId(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.driver_schedule.shift_type_id</code>.
     */
    public Short getShiftTypeId() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.driver_schedule.ready_type_id</code>.
     */
    public void setReadyTypeId(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.driver_schedule.ready_type_id</code>.
     */
    public Short getReadyTypeId() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.driver_schedule.removed</code>.
     */
    public void setRemoved(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.driver_schedule.removed</code>.
     */
    public Short getRemoved() {
        return (Short) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Date> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Date, Short, Short, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Date, Short, Short, Short> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DriverSchedule.DRIVER_SCHEDULE.DRIVER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return DriverSchedule.DRIVER_SCHEDULE.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return DriverSchedule.DRIVER_SCHEDULE.SHIFT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return DriverSchedule.DRIVER_SCHEDULE.READY_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return DriverSchedule.DRIVER_SCHEDULE.REMOVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDriverId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getShiftTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getReadyTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDriverId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getShiftTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getReadyTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleRecord value1(Integer value) {
        setDriverId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleRecord value2(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleRecord value3(Short value) {
        setShiftTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleRecord value4(Short value) {
        setReadyTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleRecord value5(Short value) {
        setRemoved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DriverScheduleRecord values(Integer value1, Date value2, Short value3, Short value4, Short value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DriverScheduleRecord
     */
    public DriverScheduleRecord() {
        super(DriverSchedule.DRIVER_SCHEDULE);
    }

    /**
     * Create a detached, initialised DriverScheduleRecord
     */
    public DriverScheduleRecord(Integer driverId, Date date, Short shiftTypeId, Short readyTypeId, Short removed) {
        super(DriverSchedule.DRIVER_SCHEDULE);

        set(0, driverId);
        set(1, date);
        set(2, shiftTypeId);
        set(3, readyTypeId);
        set(4, removed);
    }
}
