/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.bus.postgres.Indexes;
import ru.smartsarov.bus.postgres.Keys;
import ru.smartsarov.bus.postgres.Public;
import ru.smartsarov.bus.postgres.tables.records.ShiftFixedRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShiftFixed extends TableImpl<ShiftFixedRecord> {

    private static final long serialVersionUID = -32367170;

    /**
     * The reference instance of <code>public.shift_fixed</code>
     */
    public static final ShiftFixed SHIFT_FIXED = new ShiftFixed();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShiftFixedRecord> getRecordType() {
        return ShiftFixedRecord.class;
    }

    /**
     * The column <code>public.shift_fixed.shift_schedule_id</code>.
     */
    public final TableField<ShiftFixedRecord, Integer> SHIFT_SCHEDULE_ID = createField("shift_schedule_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.shift_fixed.date</code>.
     */
    public final TableField<ShiftFixedRecord, Date> DATE = createField("date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>public.shift_fixed.driver_id</code>.
     */
    public final TableField<ShiftFixedRecord, Integer> DRIVER_ID = createField("driver_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.shift_fixed.conductor_id</code>.
     */
    public final TableField<ShiftFixedRecord, Integer> CONDUCTOR_ID = createField("conductor_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.shift_fixed.removed</code>.
     */
    public final TableField<ShiftFixedRecord, Short> REMOVED = createField("removed", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.shift_fixed</code> table reference
     */
    public ShiftFixed() {
        this(DSL.name("shift_fixed"), null);
    }

    /**
     * Create an aliased <code>public.shift_fixed</code> table reference
     */
    public ShiftFixed(String alias) {
        this(DSL.name(alias), SHIFT_FIXED);
    }

    /**
     * Create an aliased <code>public.shift_fixed</code> table reference
     */
    public ShiftFixed(Name alias) {
        this(alias, SHIFT_FIXED);
    }

    private ShiftFixed(Name alias, Table<ShiftFixedRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShiftFixed(Name alias, Table<ShiftFixedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ShiftFixed(Table<O> child, ForeignKey<O, ShiftFixedRecord> key) {
        super(child, key, SHIFT_FIXED);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_SHIFT_FIXED_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShiftFixedRecord> getPrimaryKey() {
        return Keys.PK_SHIFT_FIXED_TBL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShiftFixedRecord>> getKeys() {
        return Arrays.<UniqueKey<ShiftFixedRecord>>asList(Keys.PK_SHIFT_FIXED_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ShiftFixedRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ShiftFixedRecord, ?>>asList(Keys.SHIFT_FIXED__FK_FIXED_SHIFT_TBL_SHIFT_SCHEDULE_ID, Keys.SHIFT_FIXED__FK_FIXED_SHIFT_TBL_DRIVER_ID, Keys.SHIFT_FIXED__FK_FIXED_SHIFT_TBL_CONDUCTOR);
    }

    public ShiftSchedule shiftSchedule() {
        return new ShiftSchedule(this, Keys.SHIFT_FIXED__FK_FIXED_SHIFT_TBL_SHIFT_SCHEDULE_ID);
    }

    public Driver driver() {
        return new Driver(this, Keys.SHIFT_FIXED__FK_FIXED_SHIFT_TBL_DRIVER_ID);
    }

    public Conductor conductor() {
        return new Conductor(this, Keys.SHIFT_FIXED__FK_FIXED_SHIFT_TBL_CONDUCTOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftFixed as(String alias) {
        return new ShiftFixed(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftFixed as(Name alias) {
        return new ShiftFixed(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShiftFixed rename(String name) {
        return new ShiftFixed(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShiftFixed rename(Name name) {
        return new ShiftFixed(name, null);
    }
}
