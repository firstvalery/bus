/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.bus.postgres.Indexes;
import ru.smartsarov.bus.postgres.Keys;
import ru.smartsarov.bus.postgres.Public;
import ru.smartsarov.bus.postgres.tables.records.BusInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusInfo extends TableImpl<BusInfoRecord> {

    private static final long serialVersionUID = 1371555650;

    /**
     * The reference instance of <code>public.bus_info</code>
     */
    public static final BusInfo BUS_INFO = new BusInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusInfoRecord> getRecordType() {
        return BusInfoRecord.class;
    }

    /**
     * The column <code>public.bus_info.id</code>.
     */
    public final TableField<BusInfoRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bus_info_id_seq'::regclass)", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>public.bus_info.vin</code>.
     */
    public final TableField<BusInfoRecord, String> VIN = createField("vin", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.bus_info.year_of_issue</code>.
     */
    public final TableField<BusInfoRecord, Short> YEAR_OF_ISSUE = createField("year_of_issue", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_info.make_id</code>.
     */
    public final TableField<BusInfoRecord, Short> MAKE_ID = createField("make_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_info.model_id</code>.
     */
    public final TableField<BusInfoRecord, Short> MODEL_ID = createField("model_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_info.removed</code>.
     */
    public final TableField<BusInfoRecord, Short> REMOVED = createField("removed", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>public.bus_info</code> table reference
     */
    public BusInfo() {
        this(DSL.name("bus_info"), null);
    }

    /**
     * Create an aliased <code>public.bus_info</code> table reference
     */
    public BusInfo(String alias) {
        this(DSL.name(alias), BUS_INFO);
    }

    /**
     * Create an aliased <code>public.bus_info</code> table reference
     */
    public BusInfo(Name alias) {
        this(alias, BUS_INFO);
    }

    private BusInfo(Name alias, Table<BusInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusInfo(Name alias, Table<BusInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BusInfo(Table<O> child, ForeignKey<O, BusInfoRecord> key) {
        super(child, key, BUS_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_BUS_INFO_TBL, Indexes.UNIQ_BUS_INFO_TBL_VIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BusInfoRecord, Short> getIdentity() {
        return Keys.IDENTITY_BUS_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusInfoRecord> getPrimaryKey() {
        return Keys.PK_BUS_INFO_TBL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<BusInfoRecord>>asList(Keys.PK_BUS_INFO_TBL, Keys.UNIQ_BUS_INFO_TBL_VIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BusInfoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BusInfoRecord, ?>>asList(Keys.BUS_INFO__FK_BUS_INFO_TBL_BUS_MAKE, Keys.BUS_INFO__FK_BUS_INFO_TBL_BUS_MODEL);
    }

    public RbBusMake rbBusMake() {
        return new RbBusMake(this, Keys.BUS_INFO__FK_BUS_INFO_TBL_BUS_MAKE);
    }

    public RbBusModel rbBusModel() {
        return new RbBusModel(this, Keys.BUS_INFO__FK_BUS_INFO_TBL_BUS_MODEL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusInfo as(String alias) {
        return new BusInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusInfo as(Name alias) {
        return new BusInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusInfo rename(String name) {
        return new BusInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusInfo rename(Name name) {
        return new BusInfo(name, null);
    }
}
