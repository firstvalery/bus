/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables;


import java.sql.Date;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.bus.postgres.Indexes;
import ru.smartsarov.bus.postgres.Keys;
import ru.smartsarov.bus.postgres.Public;
import ru.smartsarov.bus.postgres.tables.records.TechAvailabilitySnapshotRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TechAvailabilitySnapshot extends TableImpl<TechAvailabilitySnapshotRecord> {

    private static final long serialVersionUID = -1336430926;

    /**
     * The reference instance of <code>public.tech_availability_snapshot</code>
     */
    public static final TechAvailabilitySnapshot TECH_AVAILABILITY_SNAPSHOT = new TechAvailabilitySnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TechAvailabilitySnapshotRecord> getRecordType() {
        return TechAvailabilitySnapshotRecord.class;
    }

    /**
     * The column <code>public.tech_availability_snapshot.bus_id</code>.
     */
    public final TableField<TechAvailabilitySnapshotRecord, Short> BUS_ID = createField("bus_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.tech_availability_snapshot.date</code>.
     */
    public final TableField<TechAvailabilitySnapshotRecord, Date> DATE = createField("date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>public.tech_availability_snapshot.bus_condition_id</code>.
     */
    public final TableField<TechAvailabilitySnapshotRecord, Short> BUS_CONDITION_ID = createField("bus_condition_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.tech_availability_snapshot.created_at</code>.
     */
    public final TableField<TechAvailabilitySnapshotRecord, OffsetDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.tech_availability_snapshot.ended_at</code>.
     */
    public final TableField<TechAvailabilitySnapshotRecord, OffsetDateTime> ENDED_AT = createField("ended_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.tech_availability_snapshot.removed</code>.
     */
    public final TableField<TechAvailabilitySnapshotRecord, Short> REMOVED = createField("removed", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>public.tech_availability_snapshot</code> table reference
     */
    public TechAvailabilitySnapshot() {
        this(DSL.name("tech_availability_snapshot"), null);
    }

    /**
     * Create an aliased <code>public.tech_availability_snapshot</code> table reference
     */
    public TechAvailabilitySnapshot(String alias) {
        this(DSL.name(alias), TECH_AVAILABILITY_SNAPSHOT);
    }

    /**
     * Create an aliased <code>public.tech_availability_snapshot</code> table reference
     */
    public TechAvailabilitySnapshot(Name alias) {
        this(alias, TECH_AVAILABILITY_SNAPSHOT);
    }

    private TechAvailabilitySnapshot(Name alias, Table<TechAvailabilitySnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private TechAvailabilitySnapshot(Name alias, Table<TechAvailabilitySnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TechAvailabilitySnapshot(Table<O> child, ForeignKey<O, TechAvailabilitySnapshotRecord> key) {
        super(child, key, TECH_AVAILABILITY_SNAPSHOT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_TECH_SNAPSHOT_AVAILABILITY_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TechAvailabilitySnapshotRecord> getPrimaryKey() {
        return Keys.PK_TECH_SNAPSHOT_AVAILABILITY_TBL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TechAvailabilitySnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<TechAvailabilitySnapshotRecord>>asList(Keys.PK_TECH_SNAPSHOT_AVAILABILITY_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TechAvailabilitySnapshotRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TechAvailabilitySnapshotRecord, ?>>asList(Keys.TECH_AVAILABILITY_SNAPSHOT__FK__TECH_SNAPSHOT_AVAILABILITY_TBL_BUS_ID, Keys.TECH_AVAILABILITY_SNAPSHOT__FK_TECH_AVAILABILITY_SNAPSHOT_TBL_BUS_CONDITION_ID);
    }

    public Bus bus() {
        return new Bus(this, Keys.TECH_AVAILABILITY_SNAPSHOT__FK__TECH_SNAPSHOT_AVAILABILITY_TBL_BUS_ID);
    }

    public RbBusConditionType rbBusConditionType() {
        return new RbBusConditionType(this, Keys.TECH_AVAILABILITY_SNAPSHOT__FK_TECH_AVAILABILITY_SNAPSHOT_TBL_BUS_CONDITION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TechAvailabilitySnapshot as(String alias) {
        return new TechAvailabilitySnapshot(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TechAvailabilitySnapshot as(Name alias) {
        return new TechAvailabilitySnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TechAvailabilitySnapshot rename(String name) {
        return new TechAvailabilitySnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TechAvailabilitySnapshot rename(Name name) {
        return new TechAvailabilitySnapshot(name, null);
    }
}
