/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables.records;


import java.sql.Date;
import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.bus.postgres.tables.GenerationInfo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GenerationInfoRecord extends UpdatableRecordImpl<GenerationInfoRecord> implements Record4<Date, Short, OffsetDateTime, Short> {

    private static final long serialVersionUID = -549865408;

    /**
     * Setter for <code>public.generation_info.date</code>.
     */
    public void setDate(Date value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.generation_info.date</code>.
     */
    public Date getDate() {
        return (Date) get(0);
    }

    /**
     * Setter for <code>public.generation_info.status_id</code>.
     */
    public void setStatusId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.generation_info.status_id</code>.
     */
    public Short getStatusId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.generation_info.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.generation_info.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.generation_info.removed</code>.
     */
    public void setRemoved(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.generation_info.removed</code>.
     */
    public Short getRemoved() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Date> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Date, Short, OffsetDateTime, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Date, Short, OffsetDateTime, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field1() {
        return GenerationInfo.GENERATION_INFO.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return GenerationInfo.GENERATION_INFO.STATUS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field3() {
        return GenerationInfo.GENERATION_INFO.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return GenerationInfo.GENERATION_INFO.REMOVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component1() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getStatusId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value1() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getStatusId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GenerationInfoRecord value1(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GenerationInfoRecord value2(Short value) {
        setStatusId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GenerationInfoRecord value3(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GenerationInfoRecord value4(Short value) {
        setRemoved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GenerationInfoRecord values(Date value1, Short value2, OffsetDateTime value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GenerationInfoRecord
     */
    public GenerationInfoRecord() {
        super(GenerationInfo.GENERATION_INFO);
    }

    /**
     * Create a detached, initialised GenerationInfoRecord
     */
    public GenerationInfoRecord(Date date, Short statusId, OffsetDateTime createdAt, Short removed) {
        super(GenerationInfo.GENERATION_INFO);

        set(0, date);
        set(1, statusId);
        set(2, createdAt);
        set(3, removed);
    }
}
