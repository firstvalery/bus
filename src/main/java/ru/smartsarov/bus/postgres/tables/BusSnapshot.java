/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.bus.postgres.Indexes;
import ru.smartsarov.bus.postgres.Keys;
import ru.smartsarov.bus.postgres.Public;
import ru.smartsarov.bus.postgres.tables.records.BusSnapshotRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusSnapshot extends TableImpl<BusSnapshotRecord> {

    private static final long serialVersionUID = -525006530;

    /**
     * The reference instance of <code>public.bus_snapshot</code>
     */
    public static final BusSnapshot BUS_SNAPSHOT = new BusSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusSnapshotRecord> getRecordType() {
        return BusSnapshotRecord.class;
    }

    /**
     * The column <code>public.bus_snapshot.id</code>.
     */
    public final TableField<BusSnapshotRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bus_snapshot_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bus_snapshot.bus_info_id</code>.
     */
    public final TableField<BusSnapshotRecord, Short> BUS_INFO_ID = createField("bus_info_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_snapshot.garage_number_id</code>.
     */
    public final TableField<BusSnapshotRecord, String> GARAGE_NUMBER_ID = createField("garage_number_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.bus_snapshot.state_number_id</code>.
     */
    public final TableField<BusSnapshotRecord, String> STATE_NUMBER_ID = createField("state_number_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.bus_snapshot.fuel_code_id</code>.
     */
    public final TableField<BusSnapshotRecord, Short> FUEL_CODE_ID = createField("fuel_code_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_snapshot.odometer_mileage</code>.
     */
    public final TableField<BusSnapshotRecord, Integer> ODOMETER_MILEAGE = createField("odometer_mileage", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.bus_snapshot.tracker_mileage</code>.
     */
    public final TableField<BusSnapshotRecord, Integer> TRACKER_MILEAGE = createField("tracker_mileage", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bus_snapshot.condition_id</code>.
     */
    public final TableField<BusSnapshotRecord, Short> CONDITION_ID = createField("condition_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.bus_snapshot.created_at</code>.
     */
    public final TableField<BusSnapshotRecord, OffsetDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.bus_snapshot.ended_at</code>.
     */
    public final TableField<BusSnapshotRecord, OffsetDateTime> ENDED_AT = createField("ended_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>public.bus_snapshot.removed</code>.
     */
    public final TableField<BusSnapshotRecord, Short> REMOVED = createField("removed", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>public.bus_snapshot</code> table reference
     */
    public BusSnapshot() {
        this(DSL.name("bus_snapshot"), null);
    }

    /**
     * Create an aliased <code>public.bus_snapshot</code> table reference
     */
    public BusSnapshot(String alias) {
        this(DSL.name(alias), BUS_SNAPSHOT);
    }

    /**
     * Create an aliased <code>public.bus_snapshot</code> table reference
     */
    public BusSnapshot(Name alias) {
        this(alias, BUS_SNAPSHOT);
    }

    private BusSnapshot(Name alias, Table<BusSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusSnapshot(Name alias, Table<BusSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BusSnapshot(Table<O> child, ForeignKey<O, BusSnapshotRecord> key) {
        super(child, key, BUS_SNAPSHOT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_BUS_SNAPSHOT_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BusSnapshotRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUS_SNAPSHOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusSnapshotRecord> getPrimaryKey() {
        return Keys.PK_BUS_SNAPSHOT_TBL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusSnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<BusSnapshotRecord>>asList(Keys.PK_BUS_SNAPSHOT_TBL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BusSnapshotRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BusSnapshotRecord, ?>>asList(Keys.BUS_SNAPSHOT__FK_BUS_SNAPSHOT_TBL_BUS_ID, Keys.BUS_SNAPSHOT__FK_BUS_SNAPSHOT_TBL_FUEL_CODE_ID, Keys.BUS_SNAPSHOT__FK_BUS_SNAPSHOT_TBL_CONDITION_ID);
    }

    public BusInfo busInfo() {
        return new BusInfo(this, Keys.BUS_SNAPSHOT__FK_BUS_SNAPSHOT_TBL_BUS_ID);
    }

    public FuelCode fuelCode() {
        return new FuelCode(this, Keys.BUS_SNAPSHOT__FK_BUS_SNAPSHOT_TBL_FUEL_CODE_ID);
    }

    public RbBusConditionType rbBusConditionType() {
        return new RbBusConditionType(this, Keys.BUS_SNAPSHOT__FK_BUS_SNAPSHOT_TBL_CONDITION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusSnapshot as(String alias) {
        return new BusSnapshot(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusSnapshot as(Name alias) {
        return new BusSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusSnapshot rename(String name) {
        return new BusSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusSnapshot rename(Name name) {
        return new BusSnapshot(name, null);
    }
}
