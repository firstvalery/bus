/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.bus.postgres.tables.ShiftDepartureMoments;


/**
 * Оператор наполняет смену маршрута из списка моментов отправления для данного 
 * маршрута. 
 * Триггером проверяется приналдежность всех записей одному маршруту при INSERT. 
 * На уровне внешнего приложения проверяется group() ==1
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShiftDepartureMomentsRecord extends UpdatableRecordImpl<ShiftDepartureMomentsRecord> implements Record5<Integer, Short, Short, Short, Short> {

    private static final long serialVersionUID = 1733608377;

    /**
     * Setter for <code>public.shift_departure_moments.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.shift_departure_moments.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.shift_departure_moments.shift_departure_list_id</code>.
     */
    public void setShiftDepartureListId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.shift_departure_moments.shift_departure_list_id</code>.
     */
    public Short getShiftDepartureListId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.shift_departure_moments.departure_moments_id</code>.
     */
    public void setDepartureMomentsId(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.shift_departure_moments.departure_moments_id</code>.
     */
    public Short getDepartureMomentsId() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.shift_departure_moments.order</code>.
     */
    public void setOrder(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.shift_departure_moments.order</code>.
     */
    public Short getOrder() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.shift_departure_moments.removed</code>.
     */
    public void setRemoved(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.shift_departure_moments.removed</code>.
     */
    public Short getRemoved() {
        return (Short) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Short, Short, Short, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Short, Short, Short, Short> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ShiftDepartureMoments.SHIFT_DEPARTURE_MOMENTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return ShiftDepartureMoments.SHIFT_DEPARTURE_MOMENTS.SHIFT_DEPARTURE_LIST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return ShiftDepartureMoments.SHIFT_DEPARTURE_MOMENTS.DEPARTURE_MOMENTS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return ShiftDepartureMoments.SHIFT_DEPARTURE_MOMENTS.ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return ShiftDepartureMoments.SHIFT_DEPARTURE_MOMENTS.REMOVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getShiftDepartureListId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getDepartureMomentsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getShiftDepartureListId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getDepartureMomentsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftDepartureMomentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftDepartureMomentsRecord value2(Short value) {
        setShiftDepartureListId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftDepartureMomentsRecord value3(Short value) {
        setDepartureMomentsId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftDepartureMomentsRecord value4(Short value) {
        setOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftDepartureMomentsRecord value5(Short value) {
        setRemoved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftDepartureMomentsRecord values(Integer value1, Short value2, Short value3, Short value4, Short value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShiftDepartureMomentsRecord
     */
    public ShiftDepartureMomentsRecord() {
        super(ShiftDepartureMoments.SHIFT_DEPARTURE_MOMENTS);
    }

    /**
     * Create a detached, initialised ShiftDepartureMomentsRecord
     */
    public ShiftDepartureMomentsRecord(Integer id, Short shiftDepartureListId, Short departureMomentsId, Short order, Short removed) {
        super(ShiftDepartureMoments.SHIFT_DEPARTURE_MOMENTS);

        set(0, id);
        set(1, shiftDepartureListId);
        set(2, departureMomentsId);
        set(3, order);
        set(4, removed);
    }
}
