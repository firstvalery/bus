/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.bus.postgres.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.bus.postgres.tables.EmployeeData;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeDataRecord extends UpdatableRecordImpl<EmployeeDataRecord> implements Record7<Integer, String, String, String, String, Short, Short> {

    private static final long serialVersionUID = -274940241;

    /**
     * Setter for <code>public.employee_data.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employee_data.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.employee_data.personnel_number</code>.
     */
    public void setPersonnelNumber(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employee_data.personnel_number</code>.
     */
    public String getPersonnelNumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.employee_data.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employee_data.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.employee_data.middle_name</code>.
     */
    public void setMiddleName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employee_data.middle_name</code>.
     */
    public String getMiddleName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.employee_data.last_name</code>.
     */
    public void setLastName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.employee_data.last_name</code>.
     */
    public String getLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.employee_data.employee_type_id</code>.
     */
    public void setEmployeeTypeId(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.employee_data.employee_type_id</code>.
     */
    public Short getEmployeeTypeId() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>public.employee_data.removed</code>.
     */
    public void setRemoved(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.employee_data.removed</code>.
     */
    public Short getRemoved() {
        return (Short) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Short, Short> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Short, Short> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return EmployeeData.EMPLOYEE_DATA.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return EmployeeData.EMPLOYEE_DATA.PERSONNEL_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return EmployeeData.EMPLOYEE_DATA.FIRST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return EmployeeData.EMPLOYEE_DATA.MIDDLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return EmployeeData.EMPLOYEE_DATA.LAST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field6() {
        return EmployeeData.EMPLOYEE_DATA.EMPLOYEE_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field7() {
        return EmployeeData.EMPLOYEE_DATA.REMOVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPersonnelNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMiddleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getLastName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component6() {
        return getEmployeeTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component7() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPersonnelNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMiddleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getLastName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value6() {
        return getEmployeeTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value7() {
        return getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord value2(String value) {
        setPersonnelNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord value4(String value) {
        setMiddleName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord value5(String value) {
        setLastName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord value6(Short value) {
        setEmployeeTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord value7(Short value) {
        setRemoved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeDataRecord values(Integer value1, String value2, String value3, String value4, String value5, Short value6, Short value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeDataRecord
     */
    public EmployeeDataRecord() {
        super(EmployeeData.EMPLOYEE_DATA);
    }

    /**
     * Create a detached, initialised EmployeeDataRecord
     */
    public EmployeeDataRecord(Integer id, String personnelNumber, String firstName, String middleName, String lastName, Short employeeTypeId, Short removed) {
        super(EmployeeData.EMPLOYEE_DATA);

        set(0, id);
        set(1, personnelNumber);
        set(2, firstName);
        set(3, middleName);
        set(4, lastName);
        set(5, employeeTypeId);
        set(6, removed);
    }
}
